import { ethers, getNamedAccounts } from "hardhat"

const rpcProvider = ethers.provider

async function setCallers() {
  const { deployer } = await getNamedAccounts()
  const deploySig = rpcProvider.getSigner(deployer)

  const contractAddr = "0x5FA5f2477E9fBBeCc10032558480406E61436281"
  const inputData =
    "0x61b9e89500000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000095a0000000000000000000000000000000000000000000000000000000000000180e6b2ae631fe755e44eb208a9b7b2d08d82d3cafd61b37d1e6c3d317aeb35ecbe000000000000000000000000000000000000000000000000000000000000003b6261666b7265696367633232786476376d786874773679693364746e623632747064716e6a626d757866777665787766767964666670787277367100000000000000000000000000000000000000000000000000000000000000000000000042307837366237336564663834343038393262643733313363643434393837623535386166646130333633666139376164316333633134363132363439363163303632000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c756e69737761705f56324461696c795374617473536e617073686f745f5355534849535741502d7374672d320000000000000000000000000000000000000000"

  const tx = await deploySig.sendTransaction({
    to: contractAddr,
    data: inputData,
  })

  const txReceipt = await tx.wait()
  console.log(`Transaction hash: ${txReceipt.transactionHash}`)
}

setCallers().catch(error => {
  console.error(error)
  process.exitCode = 1
})
