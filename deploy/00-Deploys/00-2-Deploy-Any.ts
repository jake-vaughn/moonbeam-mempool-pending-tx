import { DeployFunction } from "hardhat-deploy/types"
import { HardhatRuntimeEnvironment } from "hardhat/types"

const deployAnyBytecodeContract: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
  const { network, deployments, getNamedAccounts, ethers } = hre
  const { deploy, log } = deployments
  const { deployer } = await getNamedAccounts()

  const deployerSig = await ethers.getSigner(deployer)
  const bytecode =
    "0x608060405234801561001057600080fd5b50610353806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806361b9e89514610030575b600080fd5b61004361003e3660046100f1565b610045565b005b427f995375dead20a36a9795da4fd69a12117c95423d78538f6a3e3674c7af4a3153828787878760405161007d9594939291906101f4565b60405180910390a25050505050565b8035610097816102f9565b92915050565b600082601f8301126100ae57600080fd5b81356100c16100bc8261027b565b610254565b915080825260208301602083018583830111156100dd57600080fd5b6100e88382846102b3565b50505092915050565b600080600080600060a0868803121561010957600080fd5b853567ffffffffffffffff81111561012057600080fd5b61012c8882890161009d565b955050602086013567ffffffffffffffff81111561014957600080fd5b6101558882890161009d565b94505060406101668882890161008c565b935050606086013567ffffffffffffffff81111561018357600080fd5b61018f8882890161009d565b92505060806101a08882890161008c565b9150509295509295909350565b6101b6816102b0565b82525050565b60006101c7826102a3565b6101d181856102a7565b93506101e18185602086016102bf565b6101ea816102ef565b9093019392505050565b60a0810161020282886101ad565b818103602083015261021481876101bc565b9050818103604083015261022881866101bc565b905061023760608301856101ad565b818103608083015261024981846101bc565b979650505050505050565b60405181810167ffffffffffffffff8111828210171561027357600080fd5b604052919050565b600067ffffffffffffffff82111561029257600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b90565b82818337506000910152565b60005b838110156102da5781810151838201526020016102c2565b838111156102e9576000848401525b50505050565b601f01601f191690565b610302816102b0565b811461030d57600080fd5b5056fea365627a7a72315820ec4489c8a10f8c747fe735a4d878dcf5dc8dc0a9e623fafd5aba96744fda011b6c6578706572696d656e74616cf564736f6c63430005110040"
  const anyBytecodeContractFactory = new ethers.ContractFactory([], bytecode, deployerSig)

  log("Deploying anyBytecode and waiting for confirmations...")
  const anyBytecode = await anyBytecodeContractFactory.deploy({})

  log(`anyBytecode deployed at ${anyBytecode.address}`)
  const anyBytecodeDeployTx = await anyBytecode.deployTransaction
  const txReceipt = await anyBytecodeDeployTx.wait()
  console.log(`Gas used`, txReceipt.gasUsed.toString())

  log("----------------------------------------------------")
}

export default deployAnyBytecodeContract
deployAnyBytecodeContract.tags = ["anyBytecode"]
